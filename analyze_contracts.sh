#!/bin/bash

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
SETUP_PY_PATH="$HOME/Study/slither_detector_module/code"
CONTRACTS_DIR="$HOME/Study/slither_detector_module/smartbugs-curated/access_control"
CONTRACT_NAMES=(\
    # "access_control/unprotected0.sol" \
    # "arithmetic/overflow_single_tx.sol" \
    # "bad_randomness/lottery.sol" \
    # "denial_of_service/dos_simple.sol" \
    # "front_running/FindThisHash.sol" \
    # "reentrancy/reentrancy_simple.sol" \
    # "short_addresses/short_address_example.sol" \
    # "time_manipulation/roulette.sol" \
    # "unchecked_low_level_calls/lotto.sol" \
    # "other/naivereceiver.sol" \
    # "../code/contracts/eip712.vuln.sol" \

    # "arbitrary_location_write_simple.sol" \
    # "FibonacciBalance.sol" \
    "incorrect_constructor_name1.sol" \
    'incorrect_constructor_name2.sol' \
    'incorrect_constructor_name3.sol' \
    # 'mapping_write.sol' \
    'multiowned_vulnerable.sol' \
    # 'mycontract.sol' \
    # 'parity_wallet_bug_1.sol' \
    # 'parity_wallet_bug_2.sol' \
    # 'phishable.sol' \
    # 'proxy.sol' \
    # 'rubixi.sol' \
    # 'simple_suicide.sol' \
    'unprotected0.sol' \
    'wallet_02_refund_nosub.sol' \
    'wallet_03_wrong_constructor.sol' \
    'wallet_04_confused_sign.sol' \
)



# –§–ª–∞–≥–∏ –∞–Ω–∞–ª–∏–∑–∞
USE_ALL_DETECTORS=true       # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞–º–∏ (–≤–∫–ª—é—á–∞—è –∫–∞—Å—Ç–æ–º–Ω—ã–µ)

# –î–µ—Ç–µ–∫—Ç–æ—Ä—ã (–∞–∫—Ç—É–∞–ª—å–Ω–æ –∫–æ–≥–¥–∞ —Ñ–ª–∞–≥ false)
DETECTORS="incorrect-eip712,reentrancy-eth,unchecked-lowlevel"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π major –≤–µ—Ä—Å–∏–∏ (0.4.x, 0.5.x –∏ —Ç.–¥.)
LAST_VERSIONS=("0.4.26" "0.5.17" "0.6.12" "0.7.6" "0.8.23")

DELIM=$'\n\n----------------------------------------------------------\n\n'

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
python3 -m venv ./slither_venv
source ./slither_venv/bin/activate
pip install -e $SETUP_PY_PATH
pip install solc-select

# --- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ—Ä—Å–∏–∏ ---
is_solc_installed() {
    local version=$1
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ solc-select –∫–∞–∫–∏–µ –≤–µ—Ä—Å–∏–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
    if solc-select versions | grep -q "$version"; then
        return 0
    else
        return 1
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–µ—Ä—Å–∏–π solc —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–µ—Ä—Å–∏–∏ solc..."
for version in "${LAST_VERSIONS[@]}"; do
    if is_solc_installed "$version"; then
        echo "‚úì –í–µ—Ä—Å–∏—è $version —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    else
        echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏—é $version..."
        solc-select install "$version"
    fi
done


# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω—É–∂–Ω–æ–π –≤–µ—Ä—Å–∏–∏ solc ---
get_required_solc() {
    local contract_path=$1
    # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É pragma solidity –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é
    local pragma_line=$(grep -m 1 -E "pragma solidity\s*(.*);" "$contract_path")
    
    if [[ "$pragma_line" =~ \^0\.([0-9]+)\.[0-9]+\; ]]; then
        local major_version=${BASH_REMATCH[1]}
        for version in "${LAST_VERSIONS[@]}"; do
            if [[ "$version" =~ 0\.$major_version\.[0-9]+ ]]; then
                echo "$version"
                return
            fi
        done
    elif [[ "$pragma_line" =~ \^0\.([0-9]+)\; ]]; then
        local major_version=${BASH_REMATCH[1]}
        for version in "${LAST_VERSIONS[@]}"; do
            if [[ "$version" =~ 0\.$major_version\.[0-9]+ ]]; then
                echo "$version"
                return
            fi
        done
    fi
    
    # –ï—Å–ª–∏ –Ω–µ —Å–º–æ–≥–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—É—é –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
    echo "${LAST_VERSIONS[-1]}"
}

# --- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–µ—Ç–µ–∫—Ç–æ—Ä–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ---
determine_detectors() {
    if [ "$USE_ALL_DETECTORS" = true ]; then
        echo "all"  # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –¥–µ—Ç–µ–∫—Ç–æ—Ä–æ–≤
    else
        echo "$DETECTORS"
    fi
}

DETECTORS_TO_USE=$(determine_detectors)

# --- –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ ---
echo "üîç –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞:"
echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –¥–µ—Ç–µ–∫—Ç–æ—Ä—ã: $USE_ALL_DETECTORS"
echo "–í—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–µ—Ç–µ–∫—Ç–æ—Ä—ã: $DETECTORS_TO_USE"
echo "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º–∏: $CONTRACTS_DIR"
echo "üìÑ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ${CONTRACT_NAMES[@]}"
echo "$DELIM"

for contract in "${CONTRACT_NAMES[@]}"; do
    contract_path="$CONTRACTS_DIR/$contract"
    if [ ! -f "$contract_path" ]; then
        echo "‚ö†Ô∏è –û—à–∏–±–∫–∞: –ö–æ–Ω—Ç—Ä–∞–∫—Ç $contract –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $CONTRACTS_DIR. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
        continue
    fi

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω—É–∂–Ω—É—é –≤–µ—Ä—Å–∏—é solc
    REQUIRED_SOLC=$(get_required_solc "$contract_path")
    echo "üõ†Ô∏è –î–ª—è $contract —Ç—Ä–µ–±—É–µ—Ç—Å—è solc $REQUIRED_SOLC"
    solc-select use "$REQUIRED_SOLC"

    echo "üìã –ê–Ω–∞–ª–∏–∑ $contract..."
    
    if [ "$DETECTORS_TO_USE" = "all" ]; then
        slither "$contract_path" --solc-solcs-bin "$(which solc)"
    else
        slither "$contract_path" --detect "$DETECTORS_TO_USE" --solc-solcs-bin "$(which solc)"
    fi
    
    echo "$DELIM"
done

echo "‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω."